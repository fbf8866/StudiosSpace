apply plugin: 'com.android.application'

android {
    compileSdkVersion 25 //编译应用的版本
    buildToolsVersion '25.0.2'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.example.magic.myapplication"
        minSdkVersion 17 //限制安装application的所需最低系统版本 4.1系统
        targetSdkVersion 25
        versionName "2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // dex突破65535的限制
        multiDexEnabled true
        // AndroidManifest.xml 里面UMENG_CHANNEL的value为 ${UMENG_CHANNEL_VALUE}
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "channel_name"]

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
    }

    /*** 签名*/
    signingConfigs {
        debug {
            storeFile file("C:/Users/15101/Desktop/desktop/s/key.store.jks")      //签名文件
            storePassword "123456"
            keyAlias "test"
            keyPassword "123456"  //签名密码
        }
        release {
            storeFile file("C:/Users/15101/Desktop/desktop/s/key.store.jks")      //签名文件
            storePassword "123456"
            keyAlias "test"
            keyPassword "123456"  //签名密码
        }

    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            //混淆
            minifyEnabled true

            //Zipalign优化
//            zipAlignEnabled true

            // 移除无用的resource文件
//            shrinkResources true
            //加载默认混淆配置文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    /**多渠道打包*/
    productFlavors {
        xiaomi {}
        wandoujia {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    //打包自动生成apk名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "happy-v_${defaultConfig.versionName}_${getDate()}.apk"
        }
    }
}

//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}


dependencies {
    implementation(name: 'xAlertDialogLibrary-release', ext: 'aar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':IndicatorLibrary')
    implementation 'com.android.support:appcompat-v7:25.0.+'
    implementation 'com.android.support:recyclerview-v7:23.0.+'
    implementation 'com.android.support:cardview-v7:23.0.+'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation files('libs/gson-2.2.4.jar')
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //图片加载库
    //引用张弘扬的okhttp
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.android.support:design:25.0.+'
    //使用三方图片加载库
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    // ViewModel和LiveData依赖
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.0"

    //Room库的依赖(数据储存库)
    implementation "android.arch.persistence.room:runtime:1.0.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

}
